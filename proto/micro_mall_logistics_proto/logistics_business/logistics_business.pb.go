// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.5.1
// source: proto/micro_mall_logistics_proto/logistics_business/logistics_business.proto

package logistics_business

import (
	context "context"
	_ "gitee.com/kelvins-io/common/proto/google/api"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type RetCode int32

const (
	RetCode_SUCCESS                     RetCode = 0
	RetCode_ERROR                       RetCode = 500
	RetCode_USER_NOT_EXIST              RetCode = 50001
	RetCode_USER_EXIST                  RetCode = 50002
	RetCode_MERCHANT_NOT_EXIST          RetCode = 50003
	RetCode_MERCHANT_EXIST              RetCode = 50004
	RetCode_SHOP_NOT_EXIST              RetCode = 50005
	RetCode_SHOP_EXIST                  RetCode = 50006
	RetCode_SKU_NOT_EXIST               RetCode = 50007
	RetCode_SKU_EXIST                   RetCode = 50008
	RetCode_SKU_AMOUNT_NOT_ENOUGH       RetCode = 50009
	RetCode_USER_BALANCE_NOT_ENOUGH     RetCode = 600000
	RetCode_MERCHANT_BALANCE_NOT_ENOUGH RetCode = 6000001
	RetCode_ACCOUNT_LOCK                RetCode = 6000002
	RetCode_MERCHANT_ACCOUNT_NOT_EXIST  RetCode = 6000003
	RetCode_MERCHANT_ACCOUNT_STATE_LOCK RetCode = 6000004
	RetCode_USER_ACCOUNT_NOT_EXIST      RetCode = 6000005
	RetCode_USER_ACCOUNT_STATE_LOCK     RetCode = 6000006
	RetCode_DECIMAL_PARSE_ERR           RetCode = 6000007
	RetCode_TRANSACTION_FAILED          RetCode = 6000008
	RetCode_ACCOUNT_EXIST               RetCode = 6000009
)

// Enum value maps for RetCode.
var (
	RetCode_name = map[int32]string{
		0:       "SUCCESS",
		500:     "ERROR",
		50001:   "USER_NOT_EXIST",
		50002:   "USER_EXIST",
		50003:   "MERCHANT_NOT_EXIST",
		50004:   "MERCHANT_EXIST",
		50005:   "SHOP_NOT_EXIST",
		50006:   "SHOP_EXIST",
		50007:   "SKU_NOT_EXIST",
		50008:   "SKU_EXIST",
		50009:   "SKU_AMOUNT_NOT_ENOUGH",
		600000:  "USER_BALANCE_NOT_ENOUGH",
		6000001: "MERCHANT_BALANCE_NOT_ENOUGH",
		6000002: "ACCOUNT_LOCK",
		6000003: "MERCHANT_ACCOUNT_NOT_EXIST",
		6000004: "MERCHANT_ACCOUNT_STATE_LOCK",
		6000005: "USER_ACCOUNT_NOT_EXIST",
		6000006: "USER_ACCOUNT_STATE_LOCK",
		6000007: "DECIMAL_PARSE_ERR",
		6000008: "TRANSACTION_FAILED",
		6000009: "ACCOUNT_EXIST",
	}
	RetCode_value = map[string]int32{
		"SUCCESS":                     0,
		"ERROR":                       500,
		"USER_NOT_EXIST":              50001,
		"USER_EXIST":                  50002,
		"MERCHANT_NOT_EXIST":          50003,
		"MERCHANT_EXIST":              50004,
		"SHOP_NOT_EXIST":              50005,
		"SHOP_EXIST":                  50006,
		"SKU_NOT_EXIST":               50007,
		"SKU_EXIST":                   50008,
		"SKU_AMOUNT_NOT_ENOUGH":       50009,
		"USER_BALANCE_NOT_ENOUGH":     600000,
		"MERCHANT_BALANCE_NOT_ENOUGH": 6000001,
		"ACCOUNT_LOCK":                6000002,
		"MERCHANT_ACCOUNT_NOT_EXIST":  6000003,
		"MERCHANT_ACCOUNT_STATE_LOCK": 6000004,
		"USER_ACCOUNT_NOT_EXIST":      6000005,
		"USER_ACCOUNT_STATE_LOCK":     6000006,
		"DECIMAL_PARSE_ERR":           6000007,
		"TRANSACTION_FAILED":          6000008,
		"ACCOUNT_EXIST":               6000009,
	}
)

func (x RetCode) Enum() *RetCode {
	p := new(RetCode)
	*p = x
	return p
}

func (x RetCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RetCode) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_enumTypes[0].Descriptor()
}

func (RetCode) Type() protoreflect.EnumType {
	return &file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_enumTypes[0]
}

func (x RetCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RetCode.Descriptor instead.
func (RetCode) EnumDescriptor() ([]byte, []int) {
	return file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_rawDescGZIP(), []int{0}
}

type OperationType int32

const (
	OperationType_CREATE   OperationType = 0
	OperationType_UPDATE   OperationType = 1
	OperationType_DELETE   OperationType = 2
	OperationType_AUDIT    OperationType = 3
	OperationType_PUT_AWAY OperationType = 4
)

// Enum value maps for OperationType.
var (
	OperationType_name = map[int32]string{
		0: "CREATE",
		1: "UPDATE",
		2: "DELETE",
		3: "AUDIT",
		4: "PUT_AWAY",
	}
	OperationType_value = map[string]int32{
		"CREATE":   0,
		"UPDATE":   1,
		"DELETE":   2,
		"AUDIT":    3,
		"PUT_AWAY": 4,
	}
)

func (x OperationType) Enum() *OperationType {
	p := new(OperationType)
	*p = x
	return p
}

func (x OperationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OperationType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_enumTypes[1].Descriptor()
}

func (OperationType) Type() protoreflect.EnumType {
	return &file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_enumTypes[1]
}

func (x OperationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OperationType.Descriptor instead.
func (OperationType) EnumDescriptor() ([]byte, []int) {
	return file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_rawDescGZIP(), []int{1}
}

type LogisticsState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location string `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	OpUser   string `protobuf:"bytes,2,opt,name=op_user,json=opUser,proto3" json:"op_user,omitempty"`
	Content  string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	IsOver   bool   `protobuf:"varint,4,opt,name=is_over,json=isOver,proto3" json:"is_over,omitempty"`
}

func (x *LogisticsState) Reset() {
	*x = LogisticsState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogisticsState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogisticsState) ProtoMessage() {}

func (x *LogisticsState) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogisticsState.ProtoReflect.Descriptor instead.
func (*LogisticsState) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_rawDescGZIP(), []int{0}
}

func (x *LogisticsState) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *LogisticsState) GetOpUser() string {
	if x != nil {
		return x.OpUser
	}
	return ""
}

func (x *LogisticsState) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *LogisticsState) GetIsOver() bool {
	if x != nil {
		return x.IsOver
	}
	return false
}

type UpdateStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogisticsCode string          `protobuf:"bytes,1,opt,name=logistics_code,json=logisticsCode,proto3" json:"logistics_code,omitempty"`
	State         *LogisticsState `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *UpdateStateRequest) Reset() {
	*x = UpdateStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStateRequest) ProtoMessage() {}

func (x *UpdateStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStateRequest.ProtoReflect.Descriptor instead.
func (*UpdateStateRequest) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateStateRequest) GetLogisticsCode() string {
	if x != nil {
		return x.LogisticsCode
	}
	return ""
}

func (x *UpdateStateRequest) GetState() *LogisticsState {
	if x != nil {
		return x.State
	}
	return nil
}

type UpdateStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common *CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
}

func (x *UpdateStateResponse) Reset() {
	*x = UpdateStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStateResponse) ProtoMessage() {}

func (x *UpdateStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStateResponse.ProtoReflect.Descriptor instead.
func (*UpdateStateResponse) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateStateResponse) GetCommon() *CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

type QueryRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogisticsCode string `protobuf:"bytes,1,opt,name=logistics_code,json=logisticsCode,proto3" json:"logistics_code,omitempty"`
}

func (x *QueryRecordRequest) Reset() {
	*x = QueryRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRecordRequest) ProtoMessage() {}

func (x *QueryRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRecordRequest.ProtoReflect.Descriptor instead.
func (*QueryRecordRequest) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_rawDescGZIP(), []int{3}
}

func (x *QueryRecordRequest) GetLogisticsCode() string {
	if x != nil {
		return x.LogisticsCode
	}
	return ""
}

type QueryRecordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common    *CommonResponse   `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	StateList []*LogisticsState `protobuf:"bytes,2,rep,name=state_list,json=stateList,proto3" json:"state_list,omitempty"`
}

func (x *QueryRecordResponse) Reset() {
	*x = QueryRecordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRecordResponse) ProtoMessage() {}

func (x *QueryRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRecordResponse.ProtoReflect.Descriptor instead.
func (*QueryRecordResponse) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_rawDescGZIP(), []int{4}
}

func (x *QueryRecordResponse) GetCommon() *CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *QueryRecordResponse) GetStateList() []*LogisticsState {
	if x != nil {
		return x.StateList
	}
	return nil
}

type CustomerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SendUser     string `protobuf:"bytes,1,opt,name=send_user,json=sendUser,proto3" json:"send_user,omitempty"`
	SendAddr     string `protobuf:"bytes,2,opt,name=send_addr,json=sendAddr,proto3" json:"send_addr,omitempty"`
	SendPhone    string `protobuf:"bytes,3,opt,name=send_phone,json=sendPhone,proto3" json:"send_phone,omitempty"`
	SendTime     string `protobuf:"bytes,4,opt,name=send_time,json=sendTime,proto3" json:"send_time,omitempty"`
	ReceiveUser  string `protobuf:"bytes,31,opt,name=receive_user,json=receiveUser,proto3" json:"receive_user,omitempty"`
	ReceiveAddr  string `protobuf:"bytes,32,opt,name=receive_addr,json=receiveAddr,proto3" json:"receive_addr,omitempty"`
	ReceivePhone string `protobuf:"bytes,33,opt,name=receive_phone,json=receivePhone,proto3" json:"receive_phone,omitempty"`
}

func (x *CustomerInfo) Reset() {
	*x = CustomerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerInfo) ProtoMessage() {}

func (x *CustomerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerInfo.ProtoReflect.Descriptor instead.
func (*CustomerInfo) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_rawDescGZIP(), []int{5}
}

func (x *CustomerInfo) GetSendUser() string {
	if x != nil {
		return x.SendUser
	}
	return ""
}

func (x *CustomerInfo) GetSendAddr() string {
	if x != nil {
		return x.SendAddr
	}
	return ""
}

func (x *CustomerInfo) GetSendPhone() string {
	if x != nil {
		return x.SendPhone
	}
	return ""
}

func (x *CustomerInfo) GetSendTime() string {
	if x != nil {
		return x.SendTime
	}
	return ""
}

func (x *CustomerInfo) GetReceiveUser() string {
	if x != nil {
		return x.ReceiveUser
	}
	return ""
}

func (x *CustomerInfo) GetReceiveAddr() string {
	if x != nil {
		return x.ReceiveAddr
	}
	return ""
}

func (x *CustomerInfo) GetReceivePhone() string {
	if x != nil {
		return x.ReceivePhone
	}
	return ""
}

type GoodsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderCode string `protobuf:"bytes,1,opt,name=order_code,json=orderCode,proto3" json:"order_code,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GoodsInfo) Reset() {
	*x = GoodsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsInfo) ProtoMessage() {}

func (x *GoodsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsInfo.ProtoReflect.Descriptor instead.
func (*GoodsInfo) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_rawDescGZIP(), []int{6}
}

func (x *GoodsInfo) GetOrderCode() string {
	if x != nil {
		return x.OrderCode
	}
	return ""
}

func (x *GoodsInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CreateRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OutTradeNo  string        `protobuf:"bytes,1,opt,name=out_trade_no,json=outTradeNo,proto3" json:"out_trade_no,omitempty"`   // 外部交易号，订单号
	Courier     string        `protobuf:"bytes,2,opt,name=courier,proto3" json:"courier,omitempty"`                             // 国内承运人
	CourierType int32         `protobuf:"varint,3,opt,name=courier_type,json=courierType,proto3" json:"courier_type,omitempty"` // 承运方式，普通，空运，加急
	Customer    *CustomerInfo `protobuf:"bytes,299,opt,name=customer,proto3" json:"customer,omitempty"`                         // 客户信息
	Goods       []*GoodsInfo  `protobuf:"bytes,300,rep,name=goods,proto3" json:"goods,omitempty"`                               // 货物信息
}

func (x *CreateRecordRequest) Reset() {
	*x = CreateRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRecordRequest) ProtoMessage() {}

func (x *CreateRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRecordRequest.ProtoReflect.Descriptor instead.
func (*CreateRecordRequest) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_rawDescGZIP(), []int{7}
}

func (x *CreateRecordRequest) GetOutTradeNo() string {
	if x != nil {
		return x.OutTradeNo
	}
	return ""
}

func (x *CreateRecordRequest) GetCourier() string {
	if x != nil {
		return x.Courier
	}
	return ""
}

func (x *CreateRecordRequest) GetCourierType() int32 {
	if x != nil {
		return x.CourierType
	}
	return 0
}

func (x *CreateRecordRequest) GetCustomer() *CustomerInfo {
	if x != nil {
		return x.Customer
	}
	return nil
}

func (x *CreateRecordRequest) GetGoods() []*GoodsInfo {
	if x != nil {
		return x.Goods
	}
	return nil
}

type CreateRecordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common        *CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	LogisticsCode string          `protobuf:"bytes,3,opt,name=logistics_code,json=logisticsCode,proto3" json:"logistics_code,omitempty"`
}

func (x *CreateRecordResponse) Reset() {
	*x = CreateRecordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRecordResponse) ProtoMessage() {}

func (x *CreateRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRecordResponse.ProtoReflect.Descriptor instead.
func (*CreateRecordResponse) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_rawDescGZIP(), []int{8}
}

func (x *CreateRecordResponse) GetCommon() *CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *CreateRecordResponse) GetLogisticsCode() string {
	if x != nil {
		return x.LogisticsCode
	}
	return ""
}

type CommonResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code RetCode `protobuf:"varint,1,opt,name=code,proto3,enum=logistics_business.RetCode" json:"code,omitempty"`
	Msg  string  `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *CommonResponse) Reset() {
	*x = CommonResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonResponse) ProtoMessage() {}

func (x *CommonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonResponse.ProtoReflect.Descriptor instead.
func (*CommonResponse) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_rawDescGZIP(), []int{9}
}

func (x *CommonResponse) GetCode() RetCode {
	if x != nil {
		return x.Code
	}
	return RetCode_SUCCESS
}

func (x *CommonResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto protoreflect.FileDescriptor

var file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_rawDesc = []byte{
	0x0a, 0x4c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x5f, 0x6d, 0x61,
	0x6c, 0x6c, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f,
	0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12,
	0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x1a, 0x3e, 0x67, 0x69, 0x74, 0x65, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x65,
	0x6c, 0x76, 0x69, 0x6e, 0x73, 0x2d, 0x69, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x78, 0x0a, 0x0e, 0x4c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x17, 0x0a, 0x07, 0x6f, 0x70, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x4f, 0x76, 0x65, 0x72, 0x22, 0x75, 0x0a, 0x12,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x6f, 0x67, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x73, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x4c, 0x6f,
	0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x22, 0x51, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x06, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6c, 0x6f, 0x67,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x22, 0x3b, 0x0a, 0x12, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e,
	0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x43,
	0x6f, 0x64, 0x65, 0x22, 0x94, 0x01, 0x0a, 0x13, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x06, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6c, 0x6f,
	0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x41, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6c, 0x6f,
	0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xef, 0x01, 0x0a, 0x0c, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x65, 0x6e, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x65, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6e,
	0x64, 0x41, 0x64, 0x64, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x50,
	0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x41, 0x64, 0x64, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0x3e, 0x0a, 0x09,
	0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xe9, 0x01, 0x0a,
	0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x54,
	0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x18,
	0xab, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x12, 0x34, 0x0a, 0x05, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x18, 0xac, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x05, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x22, 0x79, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3a, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e,
	0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x43,
	0x6f, 0x64, 0x65, 0x22, 0x53, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f,
	0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x52, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x2a, 0x8e, 0x04, 0x0a, 0x07, 0x52, 0x65, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10,
	0x00, 0x12, 0x0a, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0xf4, 0x03, 0x12, 0x14, 0x0a,
	0x0e, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10,
	0xd1, 0x86, 0x03, 0x12, 0x10, 0x0a, 0x0a, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x58, 0x49, 0x53,
	0x54, 0x10, 0xd2, 0x86, 0x03, 0x12, 0x18, 0x0a, 0x12, 0x4d, 0x45, 0x52, 0x43, 0x48, 0x41, 0x4e,
	0x54, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0xd3, 0x86, 0x03, 0x12,
	0x14, 0x0a, 0x0e, 0x4d, 0x45, 0x52, 0x43, 0x48, 0x41, 0x4e, 0x54, 0x5f, 0x45, 0x58, 0x49, 0x53,
	0x54, 0x10, 0xd4, 0x86, 0x03, 0x12, 0x14, 0x0a, 0x0e, 0x53, 0x48, 0x4f, 0x50, 0x5f, 0x4e, 0x4f,
	0x54, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0xd5, 0x86, 0x03, 0x12, 0x10, 0x0a, 0x0a, 0x53,
	0x48, 0x4f, 0x50, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0xd6, 0x86, 0x03, 0x12, 0x13, 0x0a,
	0x0d, 0x53, 0x4b, 0x55, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0xd7,
	0x86, 0x03, 0x12, 0x0f, 0x0a, 0x09, 0x53, 0x4b, 0x55, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10,
	0xd8, 0x86, 0x03, 0x12, 0x1b, 0x0a, 0x15, 0x53, 0x4b, 0x55, 0x5f, 0x41, 0x4d, 0x4f, 0x55, 0x4e,
	0x54, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x4e, 0x4f, 0x55, 0x47, 0x48, 0x10, 0xd9, 0x86, 0x03,
	0x12, 0x1d, 0x0a, 0x17, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x42, 0x41, 0x4c, 0x41, 0x4e, 0x43, 0x45,
	0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x4e, 0x4f, 0x55, 0x47, 0x48, 0x10, 0xc0, 0xcf, 0x24, 0x12,
	0x22, 0x0a, 0x1b, 0x4d, 0x45, 0x52, 0x43, 0x48, 0x41, 0x4e, 0x54, 0x5f, 0x42, 0x41, 0x4c, 0x41,
	0x4e, 0x43, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x4e, 0x4f, 0x55, 0x47, 0x48, 0x10, 0x81,
	0x9b, 0xee, 0x02, 0x12, 0x13, 0x0a, 0x0c, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x4c,
	0x4f, 0x43, 0x4b, 0x10, 0x82, 0x9b, 0xee, 0x02, 0x12, 0x21, 0x0a, 0x1a, 0x4d, 0x45, 0x52, 0x43,
	0x48, 0x41, 0x4e, 0x54, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x4e, 0x4f, 0x54,
	0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0x83, 0x9b, 0xee, 0x02, 0x12, 0x22, 0x0a, 0x1b, 0x4d,
	0x45, 0x52, 0x43, 0x48, 0x41, 0x4e, 0x54, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0x84, 0x9b, 0xee, 0x02, 0x12,
	0x1d, 0x0a, 0x16, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f,
	0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0x85, 0x9b, 0xee, 0x02, 0x12, 0x1e,
	0x0a, 0x17, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x45, 0x5f, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0x86, 0x9b, 0xee, 0x02, 0x12, 0x18,
	0x0a, 0x11, 0x44, 0x45, 0x43, 0x49, 0x4d, 0x41, 0x4c, 0x5f, 0x50, 0x41, 0x52, 0x53, 0x45, 0x5f,
	0x45, 0x52, 0x52, 0x10, 0x87, 0x9b, 0xee, 0x02, 0x12, 0x19, 0x0a, 0x12, 0x54, 0x52, 0x41, 0x4e,
	0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x88,
	0x9b, 0xee, 0x02, 0x12, 0x14, 0x0a, 0x0d, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x45,
	0x58, 0x49, 0x53, 0x54, 0x10, 0x89, 0x9b, 0xee, 0x02, 0x2a, 0x4c, 0x0a, 0x0d, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x52,
	0x45, 0x41, 0x54, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45,
	0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x02, 0x12, 0x09,
	0x0a, 0x05, 0x41, 0x55, 0x44, 0x49, 0x54, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x55, 0x54,
	0x5f, 0x41, 0x57, 0x41, 0x59, 0x10, 0x04, 0x32, 0x9d, 0x03, 0x0a, 0x18, 0x4c, 0x6f, 0x67, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x82, 0x01, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x27, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28,
	0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19,
	0x22, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2f,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x7b, 0x0a, 0x0b, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x26, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x73, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x27, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x15, 0x12, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73,
	0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x7f, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x26, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e,
	0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x1a, 0x14,
	0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_rawDescOnce sync.Once
	file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_rawDescData = file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_rawDesc
)

func file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_rawDescGZIP() []byte {
	file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_rawDescOnce.Do(func() {
		file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_rawDescData)
	})
	return file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_rawDescData
}

var file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_goTypes = []interface{}{
	(RetCode)(0),                 // 0: logistics_business.RetCode
	(OperationType)(0),           // 1: logistics_business.OperationType
	(*LogisticsState)(nil),       // 2: logistics_business.LogisticsState
	(*UpdateStateRequest)(nil),   // 3: logistics_business.UpdateStateRequest
	(*UpdateStateResponse)(nil),  // 4: logistics_business.UpdateStateResponse
	(*QueryRecordRequest)(nil),   // 5: logistics_business.QueryRecordRequest
	(*QueryRecordResponse)(nil),  // 6: logistics_business.QueryRecordResponse
	(*CustomerInfo)(nil),         // 7: logistics_business.CustomerInfo
	(*GoodsInfo)(nil),            // 8: logistics_business.GoodsInfo
	(*CreateRecordRequest)(nil),  // 9: logistics_business.CreateRecordRequest
	(*CreateRecordResponse)(nil), // 10: logistics_business.CreateRecordResponse
	(*CommonResponse)(nil),       // 11: logistics_business.CommonResponse
}
var file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_depIdxs = []int32{
	2,  // 0: logistics_business.UpdateStateRequest.state:type_name -> logistics_business.LogisticsState
	11, // 1: logistics_business.UpdateStateResponse.common:type_name -> logistics_business.CommonResponse
	11, // 2: logistics_business.QueryRecordResponse.common:type_name -> logistics_business.CommonResponse
	2,  // 3: logistics_business.QueryRecordResponse.state_list:type_name -> logistics_business.LogisticsState
	7,  // 4: logistics_business.CreateRecordRequest.customer:type_name -> logistics_business.CustomerInfo
	8,  // 5: logistics_business.CreateRecordRequest.goods:type_name -> logistics_business.GoodsInfo
	11, // 6: logistics_business.CreateRecordResponse.common:type_name -> logistics_business.CommonResponse
	0,  // 7: logistics_business.CommonResponse.code:type_name -> logistics_business.RetCode
	9,  // 8: logistics_business.LogisticsBusinessService.CreateRecord:input_type -> logistics_business.CreateRecordRequest
	5,  // 9: logistics_business.LogisticsBusinessService.QueryRecord:input_type -> logistics_business.QueryRecordRequest
	3,  // 10: logistics_business.LogisticsBusinessService.UpdateState:input_type -> logistics_business.UpdateStateRequest
	10, // 11: logistics_business.LogisticsBusinessService.CreateRecord:output_type -> logistics_business.CreateRecordResponse
	6,  // 12: logistics_business.LogisticsBusinessService.QueryRecord:output_type -> logistics_business.QueryRecordResponse
	4,  // 13: logistics_business.LogisticsBusinessService.UpdateState:output_type -> logistics_business.UpdateStateResponse
	11, // [11:14] is the sub-list for method output_type
	8,  // [8:11] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_init() }
func file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_init() {
	if File_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogisticsState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRecordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRecordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_goTypes,
		DependencyIndexes: file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_depIdxs,
		EnumInfos:         file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_enumTypes,
		MessageInfos:      file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_msgTypes,
	}.Build()
	File_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto = out.File
	file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_rawDesc = nil
	file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_goTypes = nil
	file_proto_micro_mall_logistics_proto_logistics_business_logistics_business_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// LogisticsBusinessServiceClient is the client API for LogisticsBusinessService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LogisticsBusinessServiceClient interface {
	// 创建物流记录
	CreateRecord(ctx context.Context, in *CreateRecordRequest, opts ...grpc.CallOption) (*CreateRecordResponse, error)
	// 查询物流记录
	QueryRecord(ctx context.Context, in *QueryRecordRequest, opts ...grpc.CallOption) (*QueryRecordResponse, error)
	// 更新物流状态
	UpdateState(ctx context.Context, in *UpdateStateRequest, opts ...grpc.CallOption) (*UpdateStateResponse, error)
}

type logisticsBusinessServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewLogisticsBusinessServiceClient(cc grpc.ClientConnInterface) LogisticsBusinessServiceClient {
	return &logisticsBusinessServiceClient{cc}
}

func (c *logisticsBusinessServiceClient) CreateRecord(ctx context.Context, in *CreateRecordRequest, opts ...grpc.CallOption) (*CreateRecordResponse, error) {
	out := new(CreateRecordResponse)
	err := c.cc.Invoke(ctx, "/logistics_business.LogisticsBusinessService/CreateRecord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logisticsBusinessServiceClient) QueryRecord(ctx context.Context, in *QueryRecordRequest, opts ...grpc.CallOption) (*QueryRecordResponse, error) {
	out := new(QueryRecordResponse)
	err := c.cc.Invoke(ctx, "/logistics_business.LogisticsBusinessService/QueryRecord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logisticsBusinessServiceClient) UpdateState(ctx context.Context, in *UpdateStateRequest, opts ...grpc.CallOption) (*UpdateStateResponse, error) {
	out := new(UpdateStateResponse)
	err := c.cc.Invoke(ctx, "/logistics_business.LogisticsBusinessService/UpdateState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LogisticsBusinessServiceServer is the server API for LogisticsBusinessService service.
type LogisticsBusinessServiceServer interface {
	// 创建物流记录
	CreateRecord(context.Context, *CreateRecordRequest) (*CreateRecordResponse, error)
	// 查询物流记录
	QueryRecord(context.Context, *QueryRecordRequest) (*QueryRecordResponse, error)
	// 更新物流状态
	UpdateState(context.Context, *UpdateStateRequest) (*UpdateStateResponse, error)
}

// UnimplementedLogisticsBusinessServiceServer can be embedded to have forward compatible implementations.
type UnimplementedLogisticsBusinessServiceServer struct {
}

func (*UnimplementedLogisticsBusinessServiceServer) CreateRecord(context.Context, *CreateRecordRequest) (*CreateRecordResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRecord not implemented")
}
func (*UnimplementedLogisticsBusinessServiceServer) QueryRecord(context.Context, *QueryRecordRequest) (*QueryRecordResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryRecord not implemented")
}
func (*UnimplementedLogisticsBusinessServiceServer) UpdateState(context.Context, *UpdateStateRequest) (*UpdateStateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateState not implemented")
}

func RegisterLogisticsBusinessServiceServer(s *grpc.Server, srv LogisticsBusinessServiceServer) {
	s.RegisterService(&_LogisticsBusinessService_serviceDesc, srv)
}

func _LogisticsBusinessService_CreateRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRecordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogisticsBusinessServiceServer).CreateRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/logistics_business.LogisticsBusinessService/CreateRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogisticsBusinessServiceServer).CreateRecord(ctx, req.(*CreateRecordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LogisticsBusinessService_QueryRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryRecordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogisticsBusinessServiceServer).QueryRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/logistics_business.LogisticsBusinessService/QueryRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogisticsBusinessServiceServer).QueryRecord(ctx, req.(*QueryRecordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LogisticsBusinessService_UpdateState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogisticsBusinessServiceServer).UpdateState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/logistics_business.LogisticsBusinessService/UpdateState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogisticsBusinessServiceServer).UpdateState(ctx, req.(*UpdateStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LogisticsBusinessService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "logistics_business.LogisticsBusinessService",
	HandlerType: (*LogisticsBusinessServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateRecord",
			Handler:    _LogisticsBusinessService_CreateRecord_Handler,
		},
		{
			MethodName: "QueryRecord",
			Handler:    _LogisticsBusinessService_QueryRecord_Handler,
		},
		{
			MethodName: "UpdateState",
			Handler:    _LogisticsBusinessService_UpdateState_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/micro_mall_logistics_proto/logistics_business/logistics_business.proto",
}
